services:
  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-user_api_db}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - dev

  redis:
    image: redis:7
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dev

  backend:
    build:
      context: ./backend
      dockerfile: ../Dockerfile
    container_name: backend_api
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - ./.env:/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    networks:
      - dev
    command: >
      bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile     
    container_name: frontend_app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - dev
    command: npm run dev        

networks:
  dev:

volumes:
  pgdata:
  redis_data:
